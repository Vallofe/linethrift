// Autogenerated by Thrift Compiler (0.13.0)
// DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING

package main

import (
	"context"
	"flag"
	"fmt"
	"math"
	"net"
	"net/url"
	"os"
	"strconv"
	"strings"
	"thrift"
	"linethrift"
)

var _ = linethrift.GoUnusedProtection__

func Usage() {
  fmt.Fprintln(os.Stderr, "Usage of ", os.Args[0], " [-h host:port] [-u url] [-f[ramed]] function [arg1 [arg2...]]:")
  flag.PrintDefaults()
  fmt.Fprintln(os.Stderr, "\nFunctions:")
  fmt.Fprintln(os.Stderr, "  CreateCombinationStickerResponse createCombinationSticker()")
  fmt.Fprintln(os.Stderr, "  GetProductResponse getProductV2()")
  fmt.Fprintln(os.Stderr, "  PurchaseOrderResponse placePurchaseOrderForFreeProduct()")
  fmt.Fprintln(os.Stderr, "  PurchaseOrderResponse placePurchaseOrderWithLineCoin()")
  fmt.Fprintln(os.Stderr, "  void canReceivePresent()")
  fmt.Fprintln(os.Stderr, "  PurchaseRecordList getSentPresents()")
  fmt.Fprintln(os.Stderr, "  PurchaseRecordList getPurchasedProducts()")
  fmt.Fprintln(os.Stderr, "  PurchaseRecordList getReceivedPresents()")
  fmt.Fprintln(os.Stderr, "  DetailedProductList getOwnedProducts()")
  fmt.Fprintln(os.Stderr, "  ShowcaseV3 getShowcaseV3()")
  fmt.Fprintln(os.Stderr, "  ProductDetail getProduct()")
  fmt.Fprintln(os.Stderr, "  ProductDetail getProductByVersion()")
  fmt.Fprintln(os.Stderr, "  PurchaseOrderResponse placePurchaseOrderWithIAP()")
  fmt.Fprintln(os.Stderr, "  ProductSummaryList getOwnedProductSummaries()")
  fmt.Fprintln(os.Stderr, "  void notifyProductEvent()")
  fmt.Fprintln(os.Stderr, "  ProductValidationScheme getProductValidationScheme()")
  fmt.Fprintln(os.Stderr, "  ProductValidationResult validateProduct()")
  fmt.Fprintln(os.Stderr, "  DetailedProductList getProductsByBillingItemId()")
  fmt.Fprintln(os.Stderr, "  ShopUpdates getUpdates()")
  fmt.Fprintln(os.Stderr, "  SearchProductsV2Response searchProductsV2()")
  fmt.Fprintln(os.Stderr, "  AggregatedHomeV2Response getAggregatedHomeV2()")
  fmt.Fprintln(os.Stderr, "  AggregatedHomeNativeResponse getAggregatedHomeNative()")
  fmt.Fprintln(os.Stderr, "  DynamicHomeNativeResponse getDynamicHomeNative()")
  fmt.Fprintln(os.Stderr, "  AggregatedPremiumHomeResponse getAggregatedPremiumHome()")
  fmt.Fprintln(os.Stderr, "  AggregatedShowcaseV4 getAggregatedShowcaseV4()")
  fmt.Fprintln(os.Stderr, "  ProductList getRecommendationForUser()")
  fmt.Fprintln(os.Stderr, "  GetRecommendationResponse getRecommendationList()")
  fmt.Fprintln(os.Stderr, "   getCategories()")
  fmt.Fprintln(os.Stderr, "  ProductList getProductsByCategory()")
  fmt.Fprintln(os.Stderr, "   getTags()")
  fmt.Fprintln(os.Stderr, "  ProductList getProductsByTags()")
  fmt.Fprintln(os.Stderr, "  void buyMustbuyProduct()")
  fmt.Fprintln(os.Stderr, "  ProductList getProductsByAuthor()")
  fmt.Fprintln(os.Stderr, "  AuthorListResponse getAuthorList()")
  fmt.Fprintln(os.Stderr, "  LatestProductsByAuthorResponse getAuthorsLatestProducts()")
  fmt.Fprintln(os.Stderr, "  EditorsPickShowcase getEditorsPickShowcase()")
  fmt.Fprintln(os.Stderr, "  GetExperimentsResponse getExperiments()")
  fmt.Fprintln(os.Stderr, "  AutoSuggestionShowcaseResponse getAutoSuggestionShowcase()")
  fmt.Fprintln(os.Stderr, "  GetSuggestDictionarySettingResponse getSuggestDictionarySetting()")
  fmt.Fprintln(os.Stderr, "  GetRecommendOaResponse getRecommendOa()")
  fmt.Fprintln(os.Stderr, "  GetSuggestResourcesResponse getSuggestResources()")
  fmt.Fprintln(os.Stderr, "  GetSuggestResourcesV2Response getSuggestResourcesV2()")
  fmt.Fprintln(os.Stderr, "  GetResourceFileReponse getResourceFile()")
  fmt.Fprintln(os.Stderr, "  GetBrowsingHistoryResponse getBrowsingHistory()")
  fmt.Fprintln(os.Stderr, "  DeleteAllBrowsingHistoryResponse deleteAllBrowsingHistory()")
  fmt.Fprintln(os.Stderr, "  GetOldSticonMappingResponse getOldSticonMapping()")
  fmt.Fprintln(os.Stderr, "  void sendReport()")
  fmt.Fprintln(os.Stderr, "  SimilarImageShowcase getSimilarImageShowcase()")
  fmt.Fprintln(os.Stderr, "  CustomizeImageTextResponse previewCustomizedImageText()")
  fmt.Fprintln(os.Stderr, "  CustomizeImageTextResponse setCustomizedImageText()")
  fmt.Fprintln(os.Stderr, "  GetSubscriptionPlansResponse getSubscriptionPlans()")
  fmt.Fprintln(os.Stderr, "  GetSubscriptionStatusResponse getSubscriptionStatus()")
  fmt.Fprintln(os.Stderr, "  GetProductSummariesInSubscriptionSlotsResponse getProductSummariesInSubscriptionSlots()")
  fmt.Fprintln(os.Stderr, "  AddProductToSubscriptionSlotResponse addProductToSubscriptionSlot()")
  fmt.Fprintln(os.Stderr, "  AddThemeToSubscriptionSlotResponse addThemeToSubscriptionSlot()")
  fmt.Fprintln(os.Stderr, "  RemoveProductFromSubscriptionSlotResponse removeProductFromSubscriptionSlot()")
  fmt.Fprintln(os.Stderr, "  PurchaseSubscriptionResponse purchaseSubscription()")
  fmt.Fprintln(os.Stderr, "  ChangeSubscriptionResponse changeSubscription()")
  fmt.Fprintln(os.Stderr, "  RestoreSubscriptionResponse restoreSubscription()")
  fmt.Fprintln(os.Stderr, "  GetProductsByTagsV2Response getProductsByTagsV2()")
  fmt.Fprintln(os.Stderr, "  GetStudentInformationResponse getStudentInformation()")
  fmt.Fprintln(os.Stderr, "  SaveStudentInformationResponse saveStudentInformation()")
  fmt.Fprintln(os.Stderr, "  ShowcaseV3 getSubscriptionShowcase()")
  fmt.Fprintln(os.Stderr, "  GetPurchasedSubscriptionsResponse getPurchasedSubscriptions()")
  fmt.Fprintln(os.Stderr, "  FindRestorablePlanResponse findRestorablePlan()")
  fmt.Fprintln(os.Stderr, "  GetSubscriptionCampaignsResponse getSubscriptionCampaigns()")
  fmt.Fprintln(os.Stderr, "  GetSubscriptionRecommendationsResponse getSubscriptionRecommendations()")
  fmt.Fprintln(os.Stderr, "  InteractionEventResponse produceInteractionEvent()")
  fmt.Fprintln(os.Stderr, "  GetExperimentsV2Response getExperimentsV2()")
  fmt.Fprintln(os.Stderr, "  BirthdayGiftAssociationVerifyResponse verifyBirthdayGiftAssociationToken()")
  fmt.Fprintln(os.Stderr, "  GetSubscriptionSlotHistoryResponse getSubscriptionSlotHistory()")
  fmt.Fprintln(os.Stderr, "  GetPopupsResponse getPopups()")
  fmt.Fprintln(os.Stderr, "  GetSubscriptionSlotStatusResponse getSubscriptionSlotStatus()")
  fmt.Fprintln(os.Stderr, "  GetProductKeyboardListResponse getProductKeyboardGlobalSetting()")
  fmt.Fprintln(os.Stderr, "  GetMusicSubscriptionStatusResponse getMusicSubscriptionStatus()")
  fmt.Fprintln(os.Stderr, "  StartBundleSubscriptionResponse startBundleSubscription()")
  fmt.Fprintln(os.Stderr, "  StopBundleSubscriptionResponse stopBundleSubscription()")
  fmt.Fprintln(os.Stderr, "  GetSubscriptionCouponCodeResponse getSubscriptionCouponCode()")
  fmt.Fprintln(os.Stderr, "  GetSubscriptionCouponCampaignResponse getSubscriptionCouponCampaign()")
  fmt.Fprintln(os.Stderr, "  GetPopupDisplayStatusResponse getPopupDisplayStatus()")
  fmt.Fprintln(os.Stderr, "  GetFilteredProductsResponse getFilteredProducts()")
  fmt.Fprintln(os.Stderr, "  GetProductLatestVersionForUserResponse getProductLatestVersionForUser()")
  fmt.Fprintln(os.Stderr, "  GetSubscriptionAgreementStatusResponse getSubscriptionAgreementStatus()")
  fmt.Fprintln(os.Stderr, "  AcceptSubscriptionAgreementResponse acceptSubscriptionAgreement()")
  fmt.Fprintln(os.Stderr, "  ShouldShowWelcomeStickerBannerResponse shouldShowWelcomeStickerBanner()")
  fmt.Fprintln(os.Stderr)
  os.Exit(0)
}

type httpHeaders map[string]string

func (h httpHeaders) String() string {
  var m map[string]string = h
  return fmt.Sprintf("%s", m)
}

func (h httpHeaders) Set(value string) error {
  parts := strings.Split(value, ": ")
  if len(parts) != 2 {
    return fmt.Errorf("header should be of format 'Key: Value'")
  }
  h[parts[0]] = parts[1]
  return nil
}

func main() {
  flag.Usage = Usage
  var host string
  var port int
  var protocol string
  var urlString string
  var framed bool
  var useHttp bool
  headers := make(httpHeaders)
  var parsedUrl *url.URL
  var trans thrift.TTransport
  _ = strconv.Atoi
  _ = math.Abs
  flag.Usage = Usage
  flag.StringVar(&host, "h", "localhost", "Specify host and port")
  flag.IntVar(&port, "p", 9090, "Specify port")
  flag.StringVar(&protocol, "P", "binary", "Specify the protocol (binary, compact, simplejson, json)")
  flag.StringVar(&urlString, "u", "", "Specify the url")
  flag.BoolVar(&framed, "framed", false, "Use framed transport")
  flag.BoolVar(&useHttp, "http", false, "Use http")
  flag.Var(headers, "H", "Headers to set on the http(s) request (e.g. -H \"Key: Value\")")
  flag.Parse()
  
  if len(urlString) > 0 {
    var err error
    parsedUrl, err = url.Parse(urlString)
    if err != nil {
      fmt.Fprintln(os.Stderr, "Error parsing URL: ", err)
      flag.Usage()
    }
    host = parsedUrl.Host
    useHttp = len(parsedUrl.Scheme) <= 0 || parsedUrl.Scheme == "http" || parsedUrl.Scheme == "https"
  } else if useHttp {
    _, err := url.Parse(fmt.Sprint("http://", host, ":", port))
    if err != nil {
      fmt.Fprintln(os.Stderr, "Error parsing URL: ", err)
      flag.Usage()
    }
  }
  
  cmd := flag.Arg(0)
  var err error
  if useHttp {
    trans, err = thrift.NewTHttpClient(parsedUrl.String())
    if len(headers) > 0 {
      httptrans := trans.(*thrift.THttpClient)
      for key, value := range headers {
        httptrans.SetHeader(key, value)
      }
    }
  } else {
    portStr := fmt.Sprint(port)
    if strings.Contains(host, ":") {
           host, portStr, err = net.SplitHostPort(host)
           if err != nil {
                   fmt.Fprintln(os.Stderr, "error with host:", err)
                   os.Exit(1)
           }
    }
    trans, err = thrift.NewTSocket(net.JoinHostPort(host, portStr))
    if err != nil {
      fmt.Fprintln(os.Stderr, "error resolving address:", err)
      os.Exit(1)
    }
    if framed {
      trans = thrift.NewTFramedTransport(trans)
    }
  }
  if err != nil {
    fmt.Fprintln(os.Stderr, "Error creating transport", err)
    os.Exit(1)
  }
  defer trans.Close()
  var protocolFactory thrift.TProtocolFactory
  switch protocol {
  case "compact":
    protocolFactory = thrift.NewTCompactProtocolFactory()
    break
  case "simplejson":
    protocolFactory = thrift.NewTSimpleJSONProtocolFactory()
    break
  case "json":
    protocolFactory = thrift.NewTJSONProtocolFactory()
    break
  case "binary", "":
    protocolFactory = thrift.NewTBinaryProtocolFactoryDefault()
    break
  default:
    fmt.Fprintln(os.Stderr, "Invalid protocol specified: ", protocol)
    Usage()
    os.Exit(1)
  }
  iprot := protocolFactory.GetProtocol(trans)
  oprot := protocolFactory.GetProtocol(trans)
  client := linethrift.NewShopServiceClient(thrift.NewTStandardClient(iprot, oprot))
  if err := trans.Open(); err != nil {
    fmt.Fprintln(os.Stderr, "Error opening socket to ", host, ":", port, " ", err)
    os.Exit(1)
  }
  
  switch cmd {
  case "createCombinationSticker":
    if flag.NArg() - 1 != 0 {
      fmt.Fprintln(os.Stderr, "CreateCombinationSticker requires 0 args")
      flag.Usage()
    }
    fmt.Print(client.CreateCombinationSticker(context.Background()))
    fmt.Print("\n")
    break
  case "getProductV2":
    if flag.NArg() - 1 != 0 {
      fmt.Fprintln(os.Stderr, "GetProductV2 requires 0 args")
      flag.Usage()
    }
    fmt.Print(client.GetProductV2(context.Background()))
    fmt.Print("\n")
    break
  case "placePurchaseOrderForFreeProduct":
    if flag.NArg() - 1 != 0 {
      fmt.Fprintln(os.Stderr, "PlacePurchaseOrderForFreeProduct requires 0 args")
      flag.Usage()
    }
    fmt.Print(client.PlacePurchaseOrderForFreeProduct(context.Background()))
    fmt.Print("\n")
    break
  case "placePurchaseOrderWithLineCoin":
    if flag.NArg() - 1 != 0 {
      fmt.Fprintln(os.Stderr, "PlacePurchaseOrderWithLineCoin requires 0 args")
      flag.Usage()
    }
    fmt.Print(client.PlacePurchaseOrderWithLineCoin(context.Background()))
    fmt.Print("\n")
    break
  case "canReceivePresent":
    if flag.NArg() - 1 != 0 {
      fmt.Fprintln(os.Stderr, "CanReceivePresent requires 0 args")
      flag.Usage()
    }
    fmt.Print(client.CanReceivePresent(context.Background()))
    fmt.Print("\n")
    break
  case "getSentPresents":
    if flag.NArg() - 1 != 0 {
      fmt.Fprintln(os.Stderr, "GetSentPresents requires 0 args")
      flag.Usage()
    }
    fmt.Print(client.GetSentPresents(context.Background()))
    fmt.Print("\n")
    break
  case "getPurchasedProducts":
    if flag.NArg() - 1 != 0 {
      fmt.Fprintln(os.Stderr, "GetPurchasedProducts requires 0 args")
      flag.Usage()
    }
    fmt.Print(client.GetPurchasedProducts(context.Background()))
    fmt.Print("\n")
    break
  case "getReceivedPresents":
    if flag.NArg() - 1 != 0 {
      fmt.Fprintln(os.Stderr, "GetReceivedPresents requires 0 args")
      flag.Usage()
    }
    fmt.Print(client.GetReceivedPresents(context.Background()))
    fmt.Print("\n")
    break
  case "getOwnedProducts":
    if flag.NArg() - 1 != 0 {
      fmt.Fprintln(os.Stderr, "GetOwnedProducts requires 0 args")
      flag.Usage()
    }
    fmt.Print(client.GetOwnedProducts(context.Background()))
    fmt.Print("\n")
    break
  case "getShowcaseV3":
    if flag.NArg() - 1 != 0 {
      fmt.Fprintln(os.Stderr, "GetShowcaseV3 requires 0 args")
      flag.Usage()
    }
    fmt.Print(client.GetShowcaseV3(context.Background()))
    fmt.Print("\n")
    break
  case "getProduct":
    if flag.NArg() - 1 != 0 {
      fmt.Fprintln(os.Stderr, "GetProduct requires 0 args")
      flag.Usage()
    }
    fmt.Print(client.GetProduct(context.Background()))
    fmt.Print("\n")
    break
  case "getProductByVersion":
    if flag.NArg() - 1 != 0 {
      fmt.Fprintln(os.Stderr, "GetProductByVersion requires 0 args")
      flag.Usage()
    }
    fmt.Print(client.GetProductByVersion(context.Background()))
    fmt.Print("\n")
    break
  case "placePurchaseOrderWithIAP":
    if flag.NArg() - 1 != 0 {
      fmt.Fprintln(os.Stderr, "PlacePurchaseOrderWithIAP requires 0 args")
      flag.Usage()
    }
    fmt.Print(client.PlacePurchaseOrderWithIAP(context.Background()))
    fmt.Print("\n")
    break
  case "getOwnedProductSummaries":
    if flag.NArg() - 1 != 0 {
      fmt.Fprintln(os.Stderr, "GetOwnedProductSummaries requires 0 args")
      flag.Usage()
    }
    fmt.Print(client.GetOwnedProductSummaries(context.Background()))
    fmt.Print("\n")
    break
  case "notifyProductEvent":
    if flag.NArg() - 1 != 0 {
      fmt.Fprintln(os.Stderr, "NotifyProductEvent requires 0 args")
      flag.Usage()
    }
    fmt.Print(client.NotifyProductEvent(context.Background()))
    fmt.Print("\n")
    break
  case "getProductValidationScheme":
    if flag.NArg() - 1 != 0 {
      fmt.Fprintln(os.Stderr, "GetProductValidationScheme requires 0 args")
      flag.Usage()
    }
    fmt.Print(client.GetProductValidationScheme(context.Background()))
    fmt.Print("\n")
    break
  case "validateProduct":
    if flag.NArg() - 1 != 0 {
      fmt.Fprintln(os.Stderr, "ValidateProduct requires 0 args")
      flag.Usage()
    }
    fmt.Print(client.ValidateProduct(context.Background()))
    fmt.Print("\n")
    break
  case "getProductsByBillingItemId":
    if flag.NArg() - 1 != 0 {
      fmt.Fprintln(os.Stderr, "GetProductsByBillingItemId requires 0 args")
      flag.Usage()
    }
    fmt.Print(client.GetProductsByBillingItemId(context.Background()))
    fmt.Print("\n")
    break
  case "getUpdates":
    if flag.NArg() - 1 != 0 {
      fmt.Fprintln(os.Stderr, "GetUpdates requires 0 args")
      flag.Usage()
    }
    fmt.Print(client.GetUpdates(context.Background()))
    fmt.Print("\n")
    break
  case "searchProductsV2":
    if flag.NArg() - 1 != 0 {
      fmt.Fprintln(os.Stderr, "SearchProductsV2 requires 0 args")
      flag.Usage()
    }
    fmt.Print(client.SearchProductsV2(context.Background()))
    fmt.Print("\n")
    break
  case "getAggregatedHomeV2":
    if flag.NArg() - 1 != 0 {
      fmt.Fprintln(os.Stderr, "GetAggregatedHomeV2 requires 0 args")
      flag.Usage()
    }
    fmt.Print(client.GetAggregatedHomeV2(context.Background()))
    fmt.Print("\n")
    break
  case "getAggregatedHomeNative":
    if flag.NArg() - 1 != 0 {
      fmt.Fprintln(os.Stderr, "GetAggregatedHomeNative requires 0 args")
      flag.Usage()
    }
    fmt.Print(client.GetAggregatedHomeNative(context.Background()))
    fmt.Print("\n")
    break
  case "getDynamicHomeNative":
    if flag.NArg() - 1 != 0 {
      fmt.Fprintln(os.Stderr, "GetDynamicHomeNative requires 0 args")
      flag.Usage()
    }
    fmt.Print(client.GetDynamicHomeNative(context.Background()))
    fmt.Print("\n")
    break
  case "getAggregatedPremiumHome":
    if flag.NArg() - 1 != 0 {
      fmt.Fprintln(os.Stderr, "GetAggregatedPremiumHome requires 0 args")
      flag.Usage()
    }
    fmt.Print(client.GetAggregatedPremiumHome(context.Background()))
    fmt.Print("\n")
    break
  case "getAggregatedShowcaseV4":
    if flag.NArg() - 1 != 0 {
      fmt.Fprintln(os.Stderr, "GetAggregatedShowcaseV4 requires 0 args")
      flag.Usage()
    }
    fmt.Print(client.GetAggregatedShowcaseV4(context.Background()))
    fmt.Print("\n")
    break
  case "getRecommendationForUser":
    if flag.NArg() - 1 != 0 {
      fmt.Fprintln(os.Stderr, "GetRecommendationForUser requires 0 args")
      flag.Usage()
    }
    fmt.Print(client.GetRecommendationForUser(context.Background()))
    fmt.Print("\n")
    break
  case "getRecommendationList":
    if flag.NArg() - 1 != 0 {
      fmt.Fprintln(os.Stderr, "GetRecommendationList requires 0 args")
      flag.Usage()
    }
    fmt.Print(client.GetRecommendationList(context.Background()))
    fmt.Print("\n")
    break
  case "getCategories":
    if flag.NArg() - 1 != 0 {
      fmt.Fprintln(os.Stderr, "GetCategories requires 0 args")
      flag.Usage()
    }
    fmt.Print(client.GetCategories(context.Background()))
    fmt.Print("\n")
    break
  case "getProductsByCategory":
    if flag.NArg() - 1 != 0 {
      fmt.Fprintln(os.Stderr, "GetProductsByCategory requires 0 args")
      flag.Usage()
    }
    fmt.Print(client.GetProductsByCategory(context.Background()))
    fmt.Print("\n")
    break
  case "getTags":
    if flag.NArg() - 1 != 0 {
      fmt.Fprintln(os.Stderr, "GetTags requires 0 args")
      flag.Usage()
    }
    fmt.Print(client.GetTags(context.Background()))
    fmt.Print("\n")
    break
  case "getProductsByTags":
    if flag.NArg() - 1 != 0 {
      fmt.Fprintln(os.Stderr, "GetProductsByTags requires 0 args")
      flag.Usage()
    }
    fmt.Print(client.GetProductsByTags(context.Background()))
    fmt.Print("\n")
    break
  case "buyMustbuyProduct":
    if flag.NArg() - 1 != 0 {
      fmt.Fprintln(os.Stderr, "BuyMustbuyProduct requires 0 args")
      flag.Usage()
    }
    fmt.Print(client.BuyMustbuyProduct(context.Background()))
    fmt.Print("\n")
    break
  case "getProductsByAuthor":
    if flag.NArg() - 1 != 0 {
      fmt.Fprintln(os.Stderr, "GetProductsByAuthor requires 0 args")
      flag.Usage()
    }
    fmt.Print(client.GetProductsByAuthor(context.Background()))
    fmt.Print("\n")
    break
  case "getAuthorList":
    if flag.NArg() - 1 != 0 {
      fmt.Fprintln(os.Stderr, "GetAuthorList requires 0 args")
      flag.Usage()
    }
    fmt.Print(client.GetAuthorList(context.Background()))
    fmt.Print("\n")
    break
  case "getAuthorsLatestProducts":
    if flag.NArg() - 1 != 0 {
      fmt.Fprintln(os.Stderr, "GetAuthorsLatestProducts requires 0 args")
      flag.Usage()
    }
    fmt.Print(client.GetAuthorsLatestProducts(context.Background()))
    fmt.Print("\n")
    break
  case "getEditorsPickShowcase":
    if flag.NArg() - 1 != 0 {
      fmt.Fprintln(os.Stderr, "GetEditorsPickShowcase requires 0 args")
      flag.Usage()
    }
    fmt.Print(client.GetEditorsPickShowcase(context.Background()))
    fmt.Print("\n")
    break
  case "getExperiments":
    if flag.NArg() - 1 != 0 {
      fmt.Fprintln(os.Stderr, "GetExperiments requires 0 args")
      flag.Usage()
    }
    fmt.Print(client.GetExperiments(context.Background()))
    fmt.Print("\n")
    break
  case "getAutoSuggestionShowcase":
    if flag.NArg() - 1 != 0 {
      fmt.Fprintln(os.Stderr, "GetAutoSuggestionShowcase requires 0 args")
      flag.Usage()
    }
    fmt.Print(client.GetAutoSuggestionShowcase(context.Background()))
    fmt.Print("\n")
    break
  case "getSuggestDictionarySetting":
    if flag.NArg() - 1 != 0 {
      fmt.Fprintln(os.Stderr, "GetSuggestDictionarySetting requires 0 args")
      flag.Usage()
    }
    fmt.Print(client.GetSuggestDictionarySetting(context.Background()))
    fmt.Print("\n")
    break
  case "getRecommendOa":
    if flag.NArg() - 1 != 0 {
      fmt.Fprintln(os.Stderr, "GetRecommendOa requires 0 args")
      flag.Usage()
    }
    fmt.Print(client.GetRecommendOa(context.Background()))
    fmt.Print("\n")
    break
  case "getSuggestResources":
    if flag.NArg() - 1 != 0 {
      fmt.Fprintln(os.Stderr, "GetSuggestResources requires 0 args")
      flag.Usage()
    }
    fmt.Print(client.GetSuggestResources(context.Background()))
    fmt.Print("\n")
    break
  case "getSuggestResourcesV2":
    if flag.NArg() - 1 != 0 {
      fmt.Fprintln(os.Stderr, "GetSuggestResourcesV2 requires 0 args")
      flag.Usage()
    }
    fmt.Print(client.GetSuggestResourcesV2(context.Background()))
    fmt.Print("\n")
    break
  case "getResourceFile":
    if flag.NArg() - 1 != 0 {
      fmt.Fprintln(os.Stderr, "GetResourceFile requires 0 args")
      flag.Usage()
    }
    fmt.Print(client.GetResourceFile(context.Background()))
    fmt.Print("\n")
    break
  case "getBrowsingHistory":
    if flag.NArg() - 1 != 0 {
      fmt.Fprintln(os.Stderr, "GetBrowsingHistory requires 0 args")
      flag.Usage()
    }
    fmt.Print(client.GetBrowsingHistory(context.Background()))
    fmt.Print("\n")
    break
  case "deleteAllBrowsingHistory":
    if flag.NArg() - 1 != 0 {
      fmt.Fprintln(os.Stderr, "DeleteAllBrowsingHistory requires 0 args")
      flag.Usage()
    }
    fmt.Print(client.DeleteAllBrowsingHistory(context.Background()))
    fmt.Print("\n")
    break
  case "getOldSticonMapping":
    if flag.NArg() - 1 != 0 {
      fmt.Fprintln(os.Stderr, "GetOldSticonMapping requires 0 args")
      flag.Usage()
    }
    fmt.Print(client.GetOldSticonMapping(context.Background()))
    fmt.Print("\n")
    break
  case "sendReport":
    if flag.NArg() - 1 != 0 {
      fmt.Fprintln(os.Stderr, "SendReport requires 0 args")
      flag.Usage()
    }
    fmt.Print(client.SendReport(context.Background()))
    fmt.Print("\n")
    break
  case "getSimilarImageShowcase":
    if flag.NArg() - 1 != 0 {
      fmt.Fprintln(os.Stderr, "GetSimilarImageShowcase requires 0 args")
      flag.Usage()
    }
    fmt.Print(client.GetSimilarImageShowcase(context.Background()))
    fmt.Print("\n")
    break
  case "previewCustomizedImageText":
    if flag.NArg() - 1 != 0 {
      fmt.Fprintln(os.Stderr, "PreviewCustomizedImageText requires 0 args")
      flag.Usage()
    }
    fmt.Print(client.PreviewCustomizedImageText(context.Background()))
    fmt.Print("\n")
    break
  case "setCustomizedImageText":
    if flag.NArg() - 1 != 0 {
      fmt.Fprintln(os.Stderr, "SetCustomizedImageText requires 0 args")
      flag.Usage()
    }
    fmt.Print(client.SetCustomizedImageText(context.Background()))
    fmt.Print("\n")
    break
  case "getSubscriptionPlans":
    if flag.NArg() - 1 != 0 {
      fmt.Fprintln(os.Stderr, "GetSubscriptionPlans requires 0 args")
      flag.Usage()
    }
    fmt.Print(client.GetSubscriptionPlans(context.Background()))
    fmt.Print("\n")
    break
  case "getSubscriptionStatus":
    if flag.NArg() - 1 != 0 {
      fmt.Fprintln(os.Stderr, "GetSubscriptionStatus requires 0 args")
      flag.Usage()
    }
    fmt.Print(client.GetSubscriptionStatus(context.Background()))
    fmt.Print("\n")
    break
  case "getProductSummariesInSubscriptionSlots":
    if flag.NArg() - 1 != 0 {
      fmt.Fprintln(os.Stderr, "GetProductSummariesInSubscriptionSlots requires 0 args")
      flag.Usage()
    }
    fmt.Print(client.GetProductSummariesInSubscriptionSlots(context.Background()))
    fmt.Print("\n")
    break
  case "addProductToSubscriptionSlot":
    if flag.NArg() - 1 != 0 {
      fmt.Fprintln(os.Stderr, "AddProductToSubscriptionSlot requires 0 args")
      flag.Usage()
    }
    fmt.Print(client.AddProductToSubscriptionSlot(context.Background()))
    fmt.Print("\n")
    break
  case "addThemeToSubscriptionSlot":
    if flag.NArg() - 1 != 0 {
      fmt.Fprintln(os.Stderr, "AddThemeToSubscriptionSlot requires 0 args")
      flag.Usage()
    }
    fmt.Print(client.AddThemeToSubscriptionSlot(context.Background()))
    fmt.Print("\n")
    break
  case "removeProductFromSubscriptionSlot":
    if flag.NArg() - 1 != 0 {
      fmt.Fprintln(os.Stderr, "RemoveProductFromSubscriptionSlot requires 0 args")
      flag.Usage()
    }
    fmt.Print(client.RemoveProductFromSubscriptionSlot(context.Background()))
    fmt.Print("\n")
    break
  case "purchaseSubscription":
    if flag.NArg() - 1 != 0 {
      fmt.Fprintln(os.Stderr, "PurchaseSubscription requires 0 args")
      flag.Usage()
    }
    fmt.Print(client.PurchaseSubscription(context.Background()))
    fmt.Print("\n")
    break
  case "changeSubscription":
    if flag.NArg() - 1 != 0 {
      fmt.Fprintln(os.Stderr, "ChangeSubscription requires 0 args")
      flag.Usage()
    }
    fmt.Print(client.ChangeSubscription(context.Background()))
    fmt.Print("\n")
    break
  case "restoreSubscription":
    if flag.NArg() - 1 != 0 {
      fmt.Fprintln(os.Stderr, "RestoreSubscription requires 0 args")
      flag.Usage()
    }
    fmt.Print(client.RestoreSubscription(context.Background()))
    fmt.Print("\n")
    break
  case "getProductsByTagsV2":
    if flag.NArg() - 1 != 0 {
      fmt.Fprintln(os.Stderr, "GetProductsByTagsV2 requires 0 args")
      flag.Usage()
    }
    fmt.Print(client.GetProductsByTagsV2(context.Background()))
    fmt.Print("\n")
    break
  case "getStudentInformation":
    if flag.NArg() - 1 != 0 {
      fmt.Fprintln(os.Stderr, "GetStudentInformation requires 0 args")
      flag.Usage()
    }
    fmt.Print(client.GetStudentInformation(context.Background()))
    fmt.Print("\n")
    break
  case "saveStudentInformation":
    if flag.NArg() - 1 != 0 {
      fmt.Fprintln(os.Stderr, "SaveStudentInformation requires 0 args")
      flag.Usage()
    }
    fmt.Print(client.SaveStudentInformation(context.Background()))
    fmt.Print("\n")
    break
  case "getSubscriptionShowcase":
    if flag.NArg() - 1 != 0 {
      fmt.Fprintln(os.Stderr, "GetSubscriptionShowcase requires 0 args")
      flag.Usage()
    }
    fmt.Print(client.GetSubscriptionShowcase(context.Background()))
    fmt.Print("\n")
    break
  case "getPurchasedSubscriptions":
    if flag.NArg() - 1 != 0 {
      fmt.Fprintln(os.Stderr, "GetPurchasedSubscriptions requires 0 args")
      flag.Usage()
    }
    fmt.Print(client.GetPurchasedSubscriptions(context.Background()))
    fmt.Print("\n")
    break
  case "findRestorablePlan":
    if flag.NArg() - 1 != 0 {
      fmt.Fprintln(os.Stderr, "FindRestorablePlan requires 0 args")
      flag.Usage()
    }
    fmt.Print(client.FindRestorablePlan(context.Background()))
    fmt.Print("\n")
    break
  case "getSubscriptionCampaigns":
    if flag.NArg() - 1 != 0 {
      fmt.Fprintln(os.Stderr, "GetSubscriptionCampaigns requires 0 args")
      flag.Usage()
    }
    fmt.Print(client.GetSubscriptionCampaigns(context.Background()))
    fmt.Print("\n")
    break
  case "getSubscriptionRecommendations":
    if flag.NArg() - 1 != 0 {
      fmt.Fprintln(os.Stderr, "GetSubscriptionRecommendations requires 0 args")
      flag.Usage()
    }
    fmt.Print(client.GetSubscriptionRecommendations(context.Background()))
    fmt.Print("\n")
    break
  case "produceInteractionEvent":
    if flag.NArg() - 1 != 0 {
      fmt.Fprintln(os.Stderr, "ProduceInteractionEvent requires 0 args")
      flag.Usage()
    }
    fmt.Print(client.ProduceInteractionEvent(context.Background()))
    fmt.Print("\n")
    break
  case "getExperimentsV2":
    if flag.NArg() - 1 != 0 {
      fmt.Fprintln(os.Stderr, "GetExperimentsV2 requires 0 args")
      flag.Usage()
    }
    fmt.Print(client.GetExperimentsV2(context.Background()))
    fmt.Print("\n")
    break
  case "verifyBirthdayGiftAssociationToken":
    if flag.NArg() - 1 != 0 {
      fmt.Fprintln(os.Stderr, "VerifyBirthdayGiftAssociationToken requires 0 args")
      flag.Usage()
    }
    fmt.Print(client.VerifyBirthdayGiftAssociationToken(context.Background()))
    fmt.Print("\n")
    break
  case "getSubscriptionSlotHistory":
    if flag.NArg() - 1 != 0 {
      fmt.Fprintln(os.Stderr, "GetSubscriptionSlotHistory requires 0 args")
      flag.Usage()
    }
    fmt.Print(client.GetSubscriptionSlotHistory(context.Background()))
    fmt.Print("\n")
    break
  case "getPopups":
    if flag.NArg() - 1 != 0 {
      fmt.Fprintln(os.Stderr, "GetPopups requires 0 args")
      flag.Usage()
    }
    fmt.Print(client.GetPopups(context.Background()))
    fmt.Print("\n")
    break
  case "getSubscriptionSlotStatus":
    if flag.NArg() - 1 != 0 {
      fmt.Fprintln(os.Stderr, "GetSubscriptionSlotStatus requires 0 args")
      flag.Usage()
    }
    fmt.Print(client.GetSubscriptionSlotStatus(context.Background()))
    fmt.Print("\n")
    break
  case "getProductKeyboardGlobalSetting":
    if flag.NArg() - 1 != 0 {
      fmt.Fprintln(os.Stderr, "GetProductKeyboardGlobalSetting requires 0 args")
      flag.Usage()
    }
    fmt.Print(client.GetProductKeyboardGlobalSetting(context.Background()))
    fmt.Print("\n")
    break
  case "getMusicSubscriptionStatus":
    if flag.NArg() - 1 != 0 {
      fmt.Fprintln(os.Stderr, "GetMusicSubscriptionStatus requires 0 args")
      flag.Usage()
    }
    fmt.Print(client.GetMusicSubscriptionStatus(context.Background()))
    fmt.Print("\n")
    break
  case "startBundleSubscription":
    if flag.NArg() - 1 != 0 {
      fmt.Fprintln(os.Stderr, "StartBundleSubscription requires 0 args")
      flag.Usage()
    }
    fmt.Print(client.StartBundleSubscription(context.Background()))
    fmt.Print("\n")
    break
  case "stopBundleSubscription":
    if flag.NArg() - 1 != 0 {
      fmt.Fprintln(os.Stderr, "StopBundleSubscription requires 0 args")
      flag.Usage()
    }
    fmt.Print(client.StopBundleSubscription(context.Background()))
    fmt.Print("\n")
    break
  case "getSubscriptionCouponCode":
    if flag.NArg() - 1 != 0 {
      fmt.Fprintln(os.Stderr, "GetSubscriptionCouponCode requires 0 args")
      flag.Usage()
    }
    fmt.Print(client.GetSubscriptionCouponCode(context.Background()))
    fmt.Print("\n")
    break
  case "getSubscriptionCouponCampaign":
    if flag.NArg() - 1 != 0 {
      fmt.Fprintln(os.Stderr, "GetSubscriptionCouponCampaign requires 0 args")
      flag.Usage()
    }
    fmt.Print(client.GetSubscriptionCouponCampaign(context.Background()))
    fmt.Print("\n")
    break
  case "getPopupDisplayStatus":
    if flag.NArg() - 1 != 0 {
      fmt.Fprintln(os.Stderr, "GetPopupDisplayStatus requires 0 args")
      flag.Usage()
    }
    fmt.Print(client.GetPopupDisplayStatus(context.Background()))
    fmt.Print("\n")
    break
  case "getFilteredProducts":
    if flag.NArg() - 1 != 0 {
      fmt.Fprintln(os.Stderr, "GetFilteredProducts requires 0 args")
      flag.Usage()
    }
    fmt.Print(client.GetFilteredProducts(context.Background()))
    fmt.Print("\n")
    break
  case "getProductLatestVersionForUser":
    if flag.NArg() - 1 != 0 {
      fmt.Fprintln(os.Stderr, "GetProductLatestVersionForUser requires 0 args")
      flag.Usage()
    }
    fmt.Print(client.GetProductLatestVersionForUser(context.Background()))
    fmt.Print("\n")
    break
  case "getSubscriptionAgreementStatus":
    if flag.NArg() - 1 != 0 {
      fmt.Fprintln(os.Stderr, "GetSubscriptionAgreementStatus requires 0 args")
      flag.Usage()
    }
    fmt.Print(client.GetSubscriptionAgreementStatus(context.Background()))
    fmt.Print("\n")
    break
  case "acceptSubscriptionAgreement":
    if flag.NArg() - 1 != 0 {
      fmt.Fprintln(os.Stderr, "AcceptSubscriptionAgreement requires 0 args")
      flag.Usage()
    }
    fmt.Print(client.AcceptSubscriptionAgreement(context.Background()))
    fmt.Print("\n")
    break
  case "shouldShowWelcomeStickerBanner":
    if flag.NArg() - 1 != 0 {
      fmt.Fprintln(os.Stderr, "ShouldShowWelcomeStickerBanner requires 0 args")
      flag.Usage()
    }
    fmt.Print(client.ShouldShowWelcomeStickerBanner(context.Background()))
    fmt.Print("\n")
    break
  case "":
    Usage()
    break
  default:
    fmt.Fprintln(os.Stderr, "Invalid function ", cmd)
  }
}
